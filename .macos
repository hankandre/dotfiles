#!/usr/bin/env bash

# ~/.macos — https://mths.be/macos

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
###############################################################################
# Hank's Customizations                                                       #
###############################################################################

echo "Hello $(whoami). Let's get you set up."

echo "mkdir -p ${HOME}/code"
mkdir -p "${HOME}/code"

echo "installing homebrew"
# install homebrew https://brew.sh
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "brew installing stuff"
# gh: The GitHub CLI
# libdvdcss: makes handbreak capable of ripping DVDs
# ripgrep: rg is faster than alternatives
# imagemagick: eventually I will need this for something
# ffmpeg: eventually I'll need this for something
# tree: really handy for listing out directories in text
# bat: A cat(1) clone with syntax highlighting and Git integration.
# switchaudio-osx: allows me to switch the audio device via the command line
# go: Golang
# httpie: A cli based HTTP client
# jq: a JSON formatter
# svgo: An SVG optimizer
brew install git gh libdvdcss ripgrep imagemagick watchman tree bat \
delta switchaudio-osx go httpie jq svgo

echo "installing node (via n-install)"
curl -L https://git.io/n-install | bash

echo "node --version: $(node --version)"
echo "npm --version: $(npm --version)"

echo "installing a few global npm packages"
npm install --global fkill-cli pure-prompt

echo "installing apps with brew cask"
brew install --cask 1password aerial alfred angry-ip-scanner \
appcleaner backblaze bartender calibre cardhop dash discord \
fantastical firefox-developer-edition flux font-fira-code \
font-fira-sans font-gidole font-hack font-ia-writer-mono \
google-chrome hazel hazeover iina inkscape insomnia istat-menus \
visual-studio-code handbrake zoomus qlcolorcode qlmarkdown qlstephen \
quicklook-json webpquicklook suspicious-package qlvideo focus qmoji slack \
iterm2 logitech-options muzzle netnewswire openaudible protonvpn rectangle \
rocket sizzy tidal transmit yubico-authenticator transmission

echo "Generating an RSA token for GitHub"
mkdir -p ~/.ssh
touch ~/.ssh/config
ssh-keygen -t rsa -b 4096 -C "hank.andre+github@hey.com"
echo "Host *\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_rsa" | tee ~/.ssh/config
eval "$(ssh-agent -s)"
echo "run 'pbcopy < ~/.ssh/id_rsa.pub' and paste that into GitHub"

# get bat and delta all configured
mkdir -p "${HOME}/.config/bat/themes"
ln -s "${HOME}/dotfiles/.config/bat/config" "${HOME}/.config/bat/config"
git clone https://github.com/batpigandme/night-owlish "${HOME}/.config/bat/themes/night-owlish"
bat cache --build

# enable Pure prompt
autoload -U promptinit; promptinit
prompt pure

###############################################################################
# Screen                                                                      #
###############################################################################

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# Enable HiDPI display modes (requires restart)
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true